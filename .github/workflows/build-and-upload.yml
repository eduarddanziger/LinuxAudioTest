name: Build and Upload DEB Package

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest

    steps:
    - name: Install GitHub CLI
      run: sudo apt-get install -y gh

    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up CMake
      uses: lukka/get-cmake@latest

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y ninja-build libasound2-dev libfmt-dev libspdlog-dev

    - name: Configure CMake
      run: cmake -G Ninja -B build

    - name: Build with Ninja
      run: cmake --build build

    - name: Package with CPack
      run: cmake --build build --target package

    - name: Verify DEB package
      run: |
        dpkg -c build/*.deb

    - name: Upload DEB package to GitHub Packages
      uses: actions/upload-artifact@v4
      with:
        name: AudioTest-deb
        path: build/*.deb
        overwrite: true

  publish:
    if: github.ref == 'refs/heads/main'
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Download DEB package
      uses: actions/download-artifact@v4
      with:
        name: AudioTest-deb
        path: build

    - name: Publish DEB package to GitHub Packages
      run: |
        echo "${{ secrets.MY_PAT }}" | gh auth login --with-token
        if gh release view "v1.0.0"; then
          gh release delete "v1.0.0" -y
        fi
        gh release create "v1.0.0" build/*.deb --title "AudioTest v1.0.0" --notes "Release of AudioTest v1.0.0"
        RELEASE_ID=$(gh api -X GET "repos/${{ github.repository }}/releases/tags/v1.0.0" --jq '.id')
        DEB_FILE=$(ls build/*.deb)
        curl -X POST \
          -H "Authorization: token ${{ secrets.MY_PAT }}" \
          -H "Content-Type: $(file --mime-type -b "$DEB_FILE")" \
          --data-binary @"$DEB_FILE" \
          "https://uploads.github.com/repos/${{ github.repository }}/releases/$RELEASE_ID/assets?name=$(basename "$DEB_FILE")"
